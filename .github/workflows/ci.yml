name: 构建和部署
on: # 监听 main 分支上的 push 事件
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: 代码质量检查
    runs-on: ubuntu-latest
    steps:
      - name: 克隆代码
        uses: actions/checkout@v4

      - name: 安装node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 安装pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 安装依赖
        run: pnpm install
        env:
          # 添加缓存标识可加速安装
          PNPM_CACHE_ID: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: 执行eslint检查
        run: pnpm lint:eslint

      - name: 执行oxlint检查
        run: pnpm lint:oxlint

      - name: 检查代码格式
        run: pnpm format --check

  build:
    name: 打包代码
    needs: lint
    runs-on: ubuntu-latest # 构建环境使用 ubuntu
    steps:
      - name: 克隆代码
        uses: actions/checkout@v4

      - name: 安装node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 安装pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 安装依赖
        run: pnpm install
        env:
          # 添加缓存标识可加速安装
          PNPM_CACHE_ID: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: 打包项目
        run: pnpm run build

      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist # 必须与构建目录一致

  deploy:
    name: 部署
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: 开发模式
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on:
      ubuntu-latest
      # 使用新版 GitHub Pages 部署方式
    steps:
      - name: 部署到 GitHub Pages
        id: deployment # 关键标识
        uses: actions/deploy-pages@v4
